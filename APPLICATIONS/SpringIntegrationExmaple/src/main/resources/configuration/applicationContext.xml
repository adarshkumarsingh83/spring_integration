<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:int-amqp="http://www.springframework.org/schema/integration/amqp"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:int-stream="http://www.springframework.org/schema/integration/stream"
       xsi:schemaLocation="http://www.springframework.org/schema/context
                            http://www.springframework.org/schema/context/spring-context.xsd
                            http://www.springframework.org/schema/integration/amqp
                            http://www.springframework.org/schema/integration/amqp/spring-integration-amqp.xsd
                            http://www.springframework.org/schema/integration
                            http://www.springframework.org/schema/integration/spring-integration.xsd
                            http://www.springframework.org/schema/integration/stream
                            http://www.springframework.org/schema/integration/stream/spring-integration-stream.xsd
                            http://www.springframework.org/schema/rabbit
                            http://www.springframework.org/schema/rabbit/spring-rabbit.xsd
                            http://www.springframework.org/schema/beans
                            http://www.springframework.org/schema/beans/spring-beans.xsd">

    <context:component-scan base-package="com.lucas.mq">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
        <context:exclude-filter type="annotation" expression="java.lang.Deprecated"/>
    </context:component-scan>

    <context:property-placeholder location="classpath*:/properties/application.properties"/>

    <!-- From STDIN To RabbitMQ -->
    <int-stream:stdin-channel-adapter id="consoleIn"
                                      channel="toRabbit">
        <int:poller fixed-delay="1000" max-messages-per-poll="1"/>
    </int-stream:stdin-channel-adapter>

    <int-amqp:outbound-channel-adapter
            channel="toRabbit" amqp-template="amqpTemplate"
            exchange-name="${app.lucas.exchange}"
            mapped-request-headers="${app.lucas.mq.header.mapper}"
            routing-key="${app.lucas.binding}"/>

    <int:channel id="toRabbit">
        <int:interceptors>
            <int:wire-tap channel="loggingChannelToRabbit"/>
        </int:interceptors>
    </int:channel>

    <int:logging-channel-adapter id="loggingChannelToRabbit"
                                 log-full-message="true"
                                 level="ERROR"/>

    <!-- From RabbitMQ To STDOUT -->
    <int-stream:stdout-channel-adapter id="consoleOut"
                                       channel="fromRabbit"
                                       append-newline="true"/>

    <int-amqp:inbound-channel-adapter channel="fromRabbit"
                                      queue-names="${app.lucas.queue}"
                                      mapped-request-headers="${app.lucas.mq.header.mapper}"
                                      connection-factory="connectionFactory"/>

    <int:channel id="fromRabbit">
        <int:interceptors>
            <int:wire-tap channel="loggingChannelFromRabbit"/>
        </int:interceptors>
    </int:channel>

    <int:logging-channel-adapter id="loggingChannelFromRabbit"
                                 log-full-message="true"
                                 level="ERROR"/>

    <!-- Infrastructure -->
    <rabbit:connection-factory id="connectionFactory"
                               host="${app.lucas.mq.host}"
                               port="${app.lucas.amqp.port}"
                               username="${app.lucas.mq.username}"
                               password="${app.lucas.mq.pwd}"/>

    <rabbit:template id="amqpTemplate"
                     queue="${app.lucas.queue}"
                     exchange="${app.lucas.exchange}"
                     connection-factory="connectionFactory"/>

    <rabbit:admin id="rabbitAdmin"
                  auto-startup="true"
                  connection-factory="connectionFactory"/>

    <rabbit:queue name="${app.lucas.queue}"
                  auto-delete="${app.lucas.mq.queue.auto.delete}"
                  durable="true"/>

    <rabbit:direct-exchange name="${app.lucas.exchange}">
        <rabbit:bindings>
            <rabbit:binding queue="${app.lucas.queue}"
                            key="${app.lucas.binding}"/>
        </rabbit:bindings>
    </rabbit:direct-exchange>

</beans>
